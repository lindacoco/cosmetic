<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.ReviewMapper">

<!-- 리플 추가  -->
  <insert id="insertReview" parameterType="ReviewVO"> 
     insert into review(rno, pno, userno, rcontent, regdate, point) values
     (#{rno}, #{pno}, #{userno}, #{rcontent}, now(), #{point})
  </insert>


<!-- 상품번호로 검색 -->
   <select id="readByNoReview" resultType="ReviewVO">
     select * from review
     where pno = #{pno} 
   </select> 

<!-- 아이디로 검색 
   <select id="readByIdReview" resultType="ReviewVO">
     select * from review
     where userid = #{userid} 
   </select>  -->

<!-- 리뷰 업데이트 -->
    <update id="updateReview" parameterType="ReviewVO">
       update review set 
       rcontent =#{rcontent}, point=#{point}
       where rno=#{rno}
    </update> 


<!-- 리뷰 삭제  -->
   <delete id="deleteReview">
       delete from review 
       where rno= #{rno}
   </delete>


<!-- 검색 기능 -->
 <sql id="search">
	 <where>
	      <if test="cri.searchType=='rcontent'.toString()">
		    and rcontent like CONCAT('%',#{cri.keyword},'%')
		  </if>
	  </where>
 </sql>

<!-- 검색으로 나타나는 리스트 부분 -->
    <select id="listSearchCriteriaReview" resultType="ReviewVO">
      select * from review <include refid="search"/> order by rno desc  limit #{cri.pageStart}, #{cri.perPageNum}
    </select>
	<!-- 검색한 결과 수  -->
	    <select id="totalSearchCountReview" resultType="int">
	        select  count(rno) from review 
		    <include refid="search"/>  
	    
	    </select>


</mapper>